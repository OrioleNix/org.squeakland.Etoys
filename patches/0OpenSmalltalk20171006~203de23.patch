Description: Fix CameraPlugin for 64bit unix
Author: Tobias Pape <tobias@netshed.de>
Origin: other, https://github.com/OpenSmalltalk/opensmalltalk-vm/commit/203de23
Bug-Debian: https://bugs.debian.org/892016
Last-Update: 2018-09-22
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/unix/plugins/CameraPlugin/sqCamera-linux.c
+++ b/unix/plugins/CameraPlugin/sqCamera-linux.c
@@ -30,6 +30,7 @@
 
 #include <stdio.h>
 #include <stdlib.h>
+#include <stdint.h>
 #include <string.h>
 #include <assert.h>
 
@@ -256,20 +257,20 @@
 /
 */
 
-inline unsigned char 
+inline uint8_t 
 clipPixel(const int pixel) {
     int result;
     result = ((pixel < 0) ? 0 : pixel);
-    return (unsigned char) ((result > 255) ? 255: result);
+    return (uint8_t) ((result > 255) ? 255: result);
 }
 
 
 inline void 
 convertPixelYUV444toARGB32(
-			   const unsigned char y,
-               const unsigned char u,
-               const unsigned char v,
-               unsigned char* dest)
+			   const uint8_t y,
+               const uint8_t u,
+               const uint8_t v,
+               uint8_t* dest)
 {
     const int C = (y - 16) * 298 + 128;
     const int D = u - 128;
@@ -286,14 +287,14 @@
 inline void 
 convertImageYUYVToARGB32 (camPtr cam)
 {
-	int i;
+	size_t i;
 
-	const unsigned char* src = cam->inBuffer;
-	unsigned char* dst = cam->sqBuffer;
-	unsigned long int *pdst;
-	unsigned long int pixelCount = cam->sqPixels;
+	const uint8_t* src = cam->inBuffer;
+	uint8_t* dst = cam->sqBuffer;
+	uint32_t *pdst;
+	uint32_t pixelCount = cam->sqPixels;
 
-	unsigned char u, y1, v, y2;
+	uint8_t u, y1, v, y2;
 
 	for (i = 0; i < pixelCount; i += 2) {
 		y1 = *src++;
@@ -319,11 +320,11 @@
 static void 
 convertImageRGB24toARGB32 (camPtr cam)
 {
-	unsigned char 	  *src = cam->inBuffer;
-	unsigned long int *dst = cam->sqBuffer;
-	unsigned long int pixelCount = cam->sqPixels;
-	unsigned long int pixel;
-	int i;
+	uint8_t 	  *src = cam->inBuffer;
+	uint32_t *dst = cam->sqBuffer;
+	uint32_t pixelCount = cam->sqPixels;
+	uint32_t pixel;
+	size_t i;
 
 	if (0 == dst) return;
 
@@ -338,11 +339,11 @@
 static void 
 convertImageRGB444toARGB32 (camPtr cam)
 {
-	unsigned char 	  *src = cam->inBuffer;
-	unsigned long int *dst = cam->sqBuffer;
-	unsigned long int pixelCount = cam->sqPixels;
-	unsigned long int r,g,b,pixel;
-	int i;
+	uint8_t 	  *src = cam->inBuffer;
+	uint32_t *dst = cam->sqBuffer;
+	uint32_t pixelCount = cam->sqPixels;
+	uint32_t r,g,b,pixel;
+	size_t i;
 
 	if (0 == dst) return;
 
@@ -364,11 +365,11 @@
 static void 
 convertImageRGB565toARGB32 (camPtr cam)
 {
-	unsigned char 	  *src = cam->inBuffer;
-	unsigned long int *dst = cam->sqBuffer;
-	unsigned long int pixelCount = cam->sqPixels;
-	unsigned long int r,g,b,pixel;
-	int i;
+	uint8_t 	  *src = cam->inBuffer;
+	uint32_t *dst = cam->sqBuffer;
+	uint32_t pixelCount = cam->sqPixels;
+	uint32_t r,g,b,pixel;
+	size_t i;
 
 	if (0 == dst) return;
 
@@ -530,7 +531,7 @@
 static int 
 uninit_device (camPtr cam) 
 {
-	unsigned int i;
+	size_t i;
 
 	if (cam->buffers)
 	  for (i = 0; i < cam->nBuffers; ++i)
@@ -577,11 +578,11 @@
 		}
 	}
 <<< */
-
+/* what? this is set above..
 	if (req.count < cam->nBuffers) return false;
 	if (cam->nBuffers < req.count) 
 		printf("Excess Buffers: %i\n", req.count);
-
+*/
 	if (!(cam->buffers = calloc (req.count, sizeof (struct buffer))))
 		return false;
 
